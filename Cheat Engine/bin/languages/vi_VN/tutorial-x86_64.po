msgid ""
msgstr "Content-Type: text/plain; charset=UTF-8"

#: tform1.btnok.caption
msgid "OK"
msgstr "OK"

#: tform1.button1.caption
msgctxt "tform1.button1.caption"
msgid "Next"
msgstr "Tiếp"

#: tform1.caption
msgid "Cheat Engine Tutorial v3.4"
msgstr "Cheat Engine Hướng Dẫn v3.4"

#: tform1.edtpassword.hint
msgid "Use this to go imeadiatly to the step you want to try"
msgstr "Sử dụng điều này để đi đến các bước bạn muốn thử"

#: tform1.edtpassword.text
msgid "090453"
msgstr "090453"

#: tform1.label1.caption
msgid "Password"
msgstr "Mật khẩu"

#: tform10.button3.caption
msgid "Restart game"
msgstr "Khởi động game"

#: tform10.button4.caption
msgctxt "tform10.button4.caption"
msgid "Attack"
msgstr "Tấn công"

#: tform10.button5.caption
msgctxt "tform10.button5.caption"
msgid "Attack"
msgstr "Tấn công"

#: tform10.button6.caption
msgctxt "tform10.button6.caption"
msgid "Restart game and autoplay"
msgstr "Khởi động lại game và tự chơi"

#: tform10.button7.caption
msgctxt "tform10.button7.caption"
msgid "Attack"
msgstr "Tấn công"

#: tform10.button8.caption
msgctxt "tform10.button8.caption"
msgid "Attack"
msgstr "Tấn công"

#: tform10.caption
msgid "Step 9"
msgstr "Bước 9"

#: tform10.label1.caption
msgctxt "tform10.label1.caption"
msgid "100"
msgstr "100"

#: tform10.label10.caption
msgctxt "tform10.label10.caption"
msgid "Health: 500"
msgstr "Sức khỏe: 500"

#: tform10.label2.caption
msgctxt "tform10.label2.caption"
msgid "Health:"
msgstr "Sức khỏe:"

#: tform10.label3.caption
msgid "Player 1: Dave"
msgstr "Người chơi 1: Dave"

#: tform10.label4.caption
msgctxt "tform10.label4.caption"
msgid "Health: 100"
msgstr "Sức khỏe: 100"

#: tform10.label5.caption
msgid "Player 2: Eric"
msgstr "Người chơi 2: Eric"

#: tform10.label6.caption
msgctxt "tform10.label6.caption"
msgid "Health: 100"
msgstr "Sức khỏe: 100"

#: tform10.label7.caption
msgid "C. Player 3: HAL"
msgstr "Người máy 3: HAL"

#: tform10.label8.caption
msgctxt "tform10.label8.caption"
msgid "Health: 500"
msgstr "Sức khỏe: 500"

#: tform10.label9.caption
msgid "C. Player 4: KITT"
msgstr "Người máy 4: KITT"

#: tform2.button1.caption
msgctxt "tform2.button1.caption"
msgid "Next"
msgstr "Tiếp"

#: tform2.button2.caption
msgctxt "tform2.button2.caption"
msgid "Hit me"
msgstr "Đánh tôi"

#: tform2.caption
msgid "Step 2"
msgstr "Bước 2"

#: tform2.label1.caption
msgctxt "tform2.label1.caption"
msgid "100"
msgstr "100"

#: tform2.label2.caption
msgctxt "tform2.label2.caption"
msgid "Health:"
msgstr "Sức khỏe:"

#: tform2.speedbutton1.caption
msgctxt "tform2.speedbutton1.caption"
msgid "Skip"
msgstr "Bỏ qua"

#: tform3.button1.caption
msgctxt "tform3.button1.caption"
msgid "Next"
msgstr "Tiếp"

#: tform3.button2.caption
msgctxt "tform3.button2.caption"
msgid "Hit me"
msgstr "Đánh tôi"

#: tform3.caption
msgid "Step 3"
msgstr "Bước 3"

#: tform3.label1.caption
msgid " "
msgstr " "

#: tform3.speedbutton1.caption
msgctxt "tform3.speedbutton1.caption"
msgid "Skip"
msgstr "Bỏ qua"

#: tform5.button1.caption
msgid "Fire"
msgstr "Bắn"

#: tform5.button2.caption
msgctxt "tform5.button2.caption"
msgid "Next"
msgstr "Tiếp"

#: tform5.button3.caption
msgctxt "tform5.button3.caption"
msgid "Hit me"
msgstr "Đánh tôi"

#: tform5.caption
msgid "Step 4"
msgstr "Bước 4"

#: tform5.label1.caption
msgctxt "tform5.label1.caption"
msgid "100"
msgstr "100"

#: tform5.label2.caption
msgid "Ammo"
msgstr "Đạn"

#: tform5.label3.caption
msgctxt "tform5.label3.caption"
msgid "Health:"
msgstr "Sức khỏe:"

#: tform5.label4.caption
msgctxt "tform5.label4.caption"
msgid "100"
msgstr "100"

#: tform5.label5.caption
msgid "(float)"
msgstr "(float)"

#: tform5.label6.caption
msgid "(double)"
msgstr "(double)"

#: tform5.speedbutton1.caption
msgctxt "tform5.speedbutton1.caption"
msgid "Skip"
msgstr "Bỏ qua"

#: tform6.button1.caption
msgctxt "tform6.button1.caption"
msgid "Change value"
msgstr "Thay đổi giá trị"

#: tform6.button2.caption
msgctxt "tform6.button2.caption"
msgid "Next"
msgstr "Tiếp"

#: tform6.caption
msgid "Step 5"
msgstr "Bước 5"

#: tform6.label1.caption
msgctxt "tform6.label1.caption"
msgid "100"
msgstr "100"

#: tform6.speedbutton1.caption
msgctxt "tform6.speedbutton1.caption"
msgid "Skip"
msgstr "Bỏ qua"

#: tform7.button1.caption
msgctxt "TFORM7.BUTTON1.CAPTION"
msgid "Change value"
msgstr "Thay đổi giá trị"

#: tform7.button2.caption
msgctxt "TFORM7.BUTTON2.CAPTION"
msgid "Next"
msgstr "Tiếp"

#: tform7.button3.caption
msgctxt "tform7.button3.caption"
msgid "Change pointer"
msgstr "Thay pointer"

#: tform7.caption
msgid "Step 6"
msgstr "Bước 6"

#: tform7.label1.caption
msgctxt "TFORM7.LABEL1.CAPTION"
msgid "100"
msgstr "100"

#: tform7.label2.caption
msgctxt "tform7.label2.caption"
msgid "3"
msgstr "3"

#: tform7.speedbutton1.caption
msgctxt "TFORM7.SPEEDBUTTON1.CAPTION"
msgid "Skip"
msgstr "Bỏ qua"

#: tform8.button1.caption
msgctxt "tform8.button1.caption"
msgid "Hit me"
msgstr "Đánh tôi"

#: tform8.button2.caption
msgctxt "tform8.button2.caption"
msgid "Next"
msgstr "Tiếp"

#: tform8.caption
msgid "Step 7"
msgstr "Bước 7"

#: tform8.label1.caption
msgctxt "tform8.label1.caption"
msgid "Health: 100"
msgstr "Sức khỏe: 100"

#: tform8.speedbutton1.caption
msgctxt "tform8.speedbutton1.caption"
msgid "Skip"
msgstr "Bỏ qua"

#: tform9.button1.caption
msgctxt "tform9.button1.caption"
msgid "Change value"
msgstr "Thay đổi giá trị"

#: tform9.button2.caption
msgctxt "tform9.button2.caption"
msgid "Next"
msgstr "Tiếp"

#: tform9.button3.caption
msgctxt "tform9.button3.caption"
msgid "Change pointer"
msgstr "Thay pointer"

#: tform9.caption
msgid "Step 8"
msgstr "Bước 8"

#: tform9.label1.caption
msgctxt "tform9.label1.caption"
msgid "100"
msgstr "100"

#: tform9.label2.caption
msgctxt "tform9.label2.caption"
msgid "3"
msgstr "3"

#: tform9.speedbutton1.caption
msgctxt "tform9.speedbutton1.caption"
msgid "Skip"
msgstr "Bỏ qua"

#: tfrmhelp.caption
msgid "Help"
msgstr "Trợ giúp"

#: tfrmhelp.image1.hint
msgid "More information like videos for this step and written tutorials"
msgstr "Thêm thông tin như video cho bước này và các hướng dẫn văn bản"

#: unit1.rsfirststeptoohardbettergiveupnow
msgid "First step too hard? Go to forum.cheatengine.org, then click on \"Tutorials\" for helpful guides!"
msgstr "Khởi đầu quá khó? Tới forum.cheatengine.org, sau đó bấm vào \"Tutorials\" cho các hướng dẫn bổ ích!"

#: unit1.rstutorial1
msgid ""
"Welcome to the Cheat Engine Tutorial (v3.4)\n"
"\n"
"This tutorial will teach you the basics of cheating in video games. It will also show you foundational aspects of using Cheat Engine (or CE for short). Follow the steps below to get started.\n"
"\n"
"1: Open Cheat Engine if it currently isn't running.\n"
"2: Click on the \"Open Process\" icon (it's the top-left icon with the computer on it, below \"File\".).\n"
"3: With the Process List window now open, look for this tutorial's process in the list. It will look something like \"00001F98-Tutorial-x86_64.exe\" or \"0000047C-Tutorial-i386.exe\". (The first 8 numbers/letters will probably be different.)\n"
"4: Once you've found the process, click on it to select it, then click the \"Open\" button. (Don't worry about all the other buttons right now. You can learn about them later if you're interested.)\n"
"\n"
"Congratulations! If you did everything correctly, the process window should be gone with Cheat Engine now attached to the tutorial (you will see the process name towards the top-center of CE).\n"
"\n"
"Click the \"Next\" button below to continue, or fill in the password and click the \"OK\" button to proceed to that step.)\n"
"\n"
"If you're having problems, simply head over to forum.cheatengine.org, then click on \"Tutorials\" to view beginner-friendly guides!\n"
msgstr ""
"Chào mừng đến với Cheat Engine Hướng Dẫn (v3.4)\n"
"\n"
"Hướng dẫn này sẽ dạy bạn cách cơ bản để gian lận các game offline. Sử dụng các chức năng của Cheat Engine. Theo dõi các bước bên dưới để bắt đầu.\n"
"\n"
"1: Mở cheat engine nếu hiện tại nó chưa chạy.\n"
"2: Bấm vào \"mở tiến trình\" biểu tượng hình máy tính.\n"
"3: Danh sách tiến trình giờ đã mở, nhìn vào tiến trình tutorial trong danh sách. Nó sẽ giống như \"00001F98-Tutorial-x86_64.exe\" hoặc \"0000047C-Tutorial-i386.exe\". (8 số đầu/các chữ cái có thể sẽ khác.)\n"
"4: Khi đã tìm thấy, bấm vào chọn nó, sau đó chọn \"Mở\". (Đừng lo về các nút bấm. Bạn có thể học về nó sau này.)\n"
"\n"
"Chúc mừng! Nếu bạn đã làm mọi thứ chính xác, cửa sổ tiến trình sẽ biến mất với cheat engine hiện được đính kèm với hướng dẫn (bạn sẽ thấy tên tiến trình chạy phía trên bản ce).\n"
"\n"
"Nhấp vào \"tiếp\" để tiếp tục, hoặc điền mật khẩu và bấm \"ok\" để tiếp tục bước đó.\n"
"\n"
"Nếu bạn có vấn đề, đơn giản truy cập forum.cheatengine.org, sau đó nhấp \"tutorials\" để xem hướng dẫn cho người mới!\n"

#: unit10.rsdead
msgid "DEAD"
msgstr "CHẾT"

#: unit10.rsfailureyourteamdied
msgid "Failure. Your team died"
msgstr "Thất bại. Đội của bạn đã chết"

#: unit10.rshealth
msgid "Health: %s"
msgstr "Sức khỏe: %s"

#: unit10.rsrestartgameandautoplay
msgctxt "unit10.rsrestartgameandautoplay"
msgid "Restart game and autoplay"
msgstr "Khởi động lại và tự chơi"

#: unit10.rsstep9sharedcodepw
msgid "Step 9: Shared code: (PW=%s)"
msgstr "Bước 9: Mã chia sẽ: (PW=%s)"

#: unit10.rsstop
msgid "Stop"
msgstr "Dừng"

#: unit10.rsthisplayerisalreadydeadrestartthegame
msgid "This player is already dead. Restart the game"
msgstr "Người chơi này đã chết. Khởi động lại game"

#: unit10.rstryagain10
msgid "Can't figure out how to do this? Don't worry. Try asking in the forum at cheatengine.org or perhaps someone already explained it better there. Are you sure you want to quit?"
msgstr "Không tìm ra cách thực hiện đúng? Đừng lo. Thử hỏi trên diễn đàn tại cheatengine.org hoặc ai đó đã có cách giải tốt nhất. Bạn có chắc muốn thoát?"

#: unit10.rstutorialstep9
msgid ""
"This step will explain how to deal with code that is used for other object of the same type\n"
"\n"
"Often when you've found health of a unit or your own player, you will find that if you remove the code, it affects enemies as well.\n"
"In these cases you must find out how to distinguish between your and the enemies objects.\n"
"Sometimes this is as easy as checking the first 4 bytes (Function pointer table) which often point to a unique location for the player, and sometimes it's a team number, or a pointer to a pointer to a pointer to a pointer to a pointer to a playername. It all depends on the complexity of the game, and your luck\n"
"\n"
"The easiest method is finding what addresses the code you found writes to and then use the dissect data feature to compare against two structures. (Your unit(s)/player and the enemies) And then see if you can find out a way to distinguish between them.\n"
"When you have found out how to distinguish between you and the computer you can inject an assembler script that checks for the condition and then either do not execute the code or do something else. (One hit kills for example)\n"
"Alternatively, you can also use this to build a so called \"Array of byte\" string which you can use to search which will result in a list of all your or the enemies players\n"
"In this tutorial I have implemented the most amazing game you will ever play.\n"
"It has 4 players. 2 Players belong to your team, and 2 Players belong to the computer. \n"
"Your task is to find the code that writes the health and make it so you win the game WITHOUT freezing your health\n"
"To continue, press \"Restart game and autoplay\" to test that your code is correct\n"
"\n"
"\n"
"Tip: Health is a float\n"
"Tip2: There are multiple solutions\n"
msgstr ""
"Bước này sẽ giải thích cách xử lý mã được sử dụng cho các đối tượng khác cùng loại\n"
"\n"
"Thường thì khi bạn tìm thấy sức khỏe của một đơn vị hoặc người chơi của mình, bạn sẽ thấy rằng nếu bạn xóa mã, nó cũng ảnh hưởng đến kẻ thù.\n"
"Trong những trường hợp này, bạn phải tìm ra cách phân biệt giữa đồ vật của bạn và kẻ thù.\n"
"Đôi khi điều này dễ dàng như việc kiểm tra 4 byte đầu tiên (bảng con trỏ hàm) thường trỏ đến một vị trí duy nhất cho người chơi và đôi khi đó là một số đội hoặc một con trỏ tới một con trỏ tới một con trỏ tới một con trỏ tới tên người chơi. Tất cả phụ thuộc vào độ phức tạp của trò chơi và vận may của bạn\n"
"\n"
"Phương pháp đơn giản nhất là tìm địa chỉ mà mã bạn tìm thấy ghi vào và sau đó sử dụng tính năng phân tích dữ liệu để so sánh với hai cấu trúc. (đơn vị/người chơi của bạn và kẻ thù) Và sau đó xem liệu bạn có thể tìm ra cách để phân biệt giữa chúng hay không.\n"
"Khi bạn đã tìm ra cách phân biệt giữa bạn và địch, bạn có thể đưa vào một tập lệnh để kiểm tra điều kiện và sau đó không thực thi mã hoặc làm điều gì đó khác. (Một đấm chết luôn chẳng hạn)\n"
"Ngoài ra, bạn cũng có thể sử dụng điều này để xây dựng một chuỗi được gọi là \"Mảng byte\" mà bạn có thể sử dụng để tìm kiếm sẽ dẫn đến danh sách tất cả chỉ số của bạn hoặc kẻ thù\n"
"Trong hướng dẫn này, tôi đã triển khai trò chơi tuyệt vời nhất mà bạn từng chơi.\n"
"Nó có 4 người chơi. 2 người chơi thuộc về đội của bạn và 2 người máy thuộc về pc.\n"
"Nhiệm vụ của bạn là tìm mã ghi sức khỏe và tạo ra nó để bạn giành chiến thắng trong trò chơi mà KHÔNG bị đóng băng sức khỏe của bạn\n"
"Để tiếp tục, nhấn \"khởi động lại và tự chơi\" để kiểm tra mã của bạn nếu chính xác\n"
"\n"
"\n"
"Mẹo: Sức khỏe là kiểu float\n"
"Mẹo2: Có nhiều giải pháp\n"

#: unit10.rsu10thiswasthelasttutorial
msgid "This was the last tutorial and you skipped it. You lose"
msgstr "Đây là hướng dẫn cuối bạn đã bỏ qua. Bạn thua"

#: unit2.rsawyouredeathletmereviveyou
msgctxt "unit2.rsawyouredeathletmereviveyou"
msgid "Aw, you're dead! Let me revive you"
msgstr "Ô, bạn đã chết! Để tôi cứu bạn"

#: unit2.rsloser
msgctxt "unit2.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit2.rsquittingonstep2thisistheeasieststepthereisfindheal
msgid "Quitting on step2? This is the easiest step there is. Find health, change health, done.... Sure you want to quit?"
msgstr "Thoát khỏi bước 2? Đây là cách dễ nhất để làm. Tìm sức khỏe, thay đổi giá trị sức khỏe, xong.... Chắc muốn thoát chứ?"

#: unit2.rsstep2exactvaluescanningpw
msgid "Step 2: Exact Value scanning (PW="
msgstr "Bước 2: Quét giá trị chính xác (PW="

#: unit2.rstutorialstep2
msgid ""
"Now that you have opened the tutorial with Cheat Engine let's get on with the next step.\n"
"\n"
"You can see at the bottom of this window is the text Health: xxx\n"
"Each time you click 'Hit me'  your health gets decreased.\n"
"\n"
"To get to the next step you have to find this value and change it to 1000\n"
"\n"
"To find the value there are different ways, but I'll tell you about the easiest, 'Exact Value':\n"
"First make sure value type is set to at least 2-bytes or 4-bytes. 1-byte will also work, but you'll run into an easy to fix problem when you've found the address and want to change it. The 8-byte may perhaps works if the bytes after the address are 0, but I wouldn't take the bet.\n"
"Single, double, and the other scans just don't work, because they store the value in a different way.\n"
"\n"
"When the value type is set correctly, make sure the scantype is set to 'Exact Value'\n"
"Then fill in the number your health is in the value box. And click 'First Scan'\n"
"After a while (if you have a extremely slow pc) the scan is done and the results are shown in the list on the left\n"
"\n"
"If you find more than 1 address and you don't know for sure which address it is, click 'Hit me', fill in the new health value into the value box, and click 'Next Scan'\n"
"repeat this until you're sure you've found it. (that includes that there's only 1 address in the list.....)\n"
"\n"
"Now double click the address in the list on the left. This makes the address pop-up in the list at the bottom, showing you the current value.\n"
"Double click the value, (or select it and press enter), and change the value to 1000.\n"
"\n"
"If everything went ok the next button should become enabled, and you're ready for the next step.\n"
"\n"
"\n"
"Note:\n"
"If you did anything wrong while scanning, click \"New Scan\" and repeat the scanning again.\n"
"Also, try playing around with the value and click 'hit me'\n"
msgstr ""
"Bây giờ bạn đã mở hướng dẫn với Cheat Engine, hãy bắt đầu với bước tiếp theo.\n"
"\n"
"Bạn có thể thấy ở cuối cửa sổ này là dòng chữ Sức khỏe: xxx\n"
"Nếu bạn bấm 'Đánh tôi'  sức khỏe của bạn sẽ giảm.\n"
"\n"
"Để đến bước tiếp theo bạn cần tìm giá trị sức khỏe và thay thành 1000\n"
"\n"
"Để tìm giá trị đó có nhiều cách, nhưng tôi sẽ nói về cách dễ nhất, 'Giá trị chính xác':\n"
"Trước tiên cần chắc chắn loại giá trị là 2-byte hoặc 4-byte. 1-byte cũng hoạt động, nhưng bạn sẽ gặp phải sự cố dễ khắc phục khi bạn đã tìm thấy địa chỉ và muốn thay đổi nó. 8 byte có lẽ có thể hoạt động nếu các byte sau địa chỉ bằng 0, nhưng tôi sẽ không đặt cược.\n"
"Single, double, và các loại quét khác sẽ không hoạt động, vì giá trị của chúng là khác.\n"
"\n"
"Khi loại giá trị được đặt đúng, chắc chắn kiểu quét là 'Giá trị chính xác'\n"
"Sau đó điền giá trị sức khỏe của bạn vào hộp giá trị. Và nhấp 'Quét đầu'\n"
"Sau một lúc (nếu bạn có pc cực kỳ chậm), quá trình quét được thực hiện và kết quả được hiển thị trong danh sách bên trái\n"
"\n"
"Nếu bạn tìm được nhiều địa chỉ và không chắc chắn, nhấp 'Đánh tôi', điền giá trị sức khỏe mới vào hộp giá trị, và bấm 'Quét tiếp'\n"
"lặp lại cho đến khi bạn tìm thấy nó. (chỉ còn 1 địa chỉ trong danh sách .....)\n"
"\n"
"Giờ nhấp đúp vào địa chỉ đó. Nó sẽ mang địa chỉ xuống danh sách bên dưới, hiển thị cho bạn giá trị hiện tại.\n"
"Nhấp đúp vào giá trị, (hoặc chọn nó và nhấn enter), và thay thành 1000.\n"
"\n"
"Nếu mọi thứ hoạt động nút Tiếp sẽ xuất hiện, và bạn sẵn sàng cho bước tiếp theo.\n"
"\n"
"\n"
"Ghi chú:\n"
"Nếu bạn làm sai trong lúc quét, bấm \"Quét mới\" và lặp lại các bước quét.\n"
"Ngoài ra, hãy thử chơi với giá trị và nhấp vào 'Đánh tôi'\n"

#: unit3.rsdead
msgid "Seems you've done it again! Let me get a replacement! (And restart your scan!)"
msgstr "Có vẻ như bạn đã xong một lần nữa! Hãy để tôi được thay thế! (Và khởi động lại quá trình quét của bạn!)"

#: unit3.rsloser
msgctxt "unit3.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit3.rsstep3unknowninitialvaluepw
msgid "Step 3: Unknown initial value (PW="
msgstr "Bước 3: Giá trị không xác định (PW="

#: unit3.rstryagain3
msgid "Step 3 isn't really that hard. Just do a new scan, unkown initial value and then decreased value till you find it. Almost everyone gets past this one. Sure you want to quit?"
msgstr "Bước 3 thực sự không quá khó. Chỉ cần thực hiện quét mới, bỏ giá trị ban đầu và sau đó giảm cho đến khi bạn tìm thấy nó. Hầu như mọi người đều vượt qua. bạn chắc muốn thoát?"

#: unit3.rstutorialstep3
msgid ""
"Ok, seeing that you've figured out how to find a value using exact value let's move on to the next step.\n"
"\n"
"First things first though. Since you are doing a new scan, you have to click on New Scan first, to start a new scan. (You may think this is straighforward, but you'd be surprised how many people get stuck on that step) I won't be explaining this step again, so keep this in mind\n"
"Now that you've started a new scan, let's continue\n"
"\n"
"In the previous test we knew the initial value so we could do a exact value, but now we have a status bar where we don't know the starting value.\n"
"We only know that the value is between 0 and 500. And each time you click 'hit me' you lose some health. The amount you lose each time is shown above the status bar.\n"
"\n"
"Again there are several different ways to find the value. (like doing a decreased value by... scan), but I'll only explain the easiest. \"Unknown initial value\", and decreased value.\n"
"Because you don't know the value it is right now, a exact value wont do any good, so choose as scantype 'Unknown initial value', again, the value type is 4-bytes. (most windows apps use 4-bytes)click first scan and wait till it's done.\n"
"\n"
"When it is done click 'hit me'. You'll lose some of your health. (the amount you lost shows for a few seconds and then disappears, but you don't need that)\n"
"Now go to Cheat Engine, and choose 'Decreased Value' and click 'Next Scan'\n"
"When that scan is done, click hit me again, and repeat the above till you only find a few. \n"
"\n"
"We know the value is between 0 and 500, so pick the one that is most likely the address we need, and add it to the list.\n"
"Now change the health to 5000, to proceed to the next step.\n"
msgstr ""
"Ok, thấy rằng bạn đã tìm ra cách tìm giá trị bằng cách sử dụng giá trị chính xác, hãy chuyển sang bước tiếp theo.\n"
"\n"
"Vì bạn đang thực hiện một quá trình quét mới, trước tiên bạn phải nhấp vào Quét mới. (Bạn có thể nghĩ rằng điều này là đơn giản, nhưng bạn sẽ ngạc nhiên khi có bao nhiêu người mắc kẹt ở bước đó) Tôi sẽ không giải thích lại bước này, vì vậy hãy ghi nhớ điều này\n"
"Giờ bạn đã bắt đầu quét mới, tiếp tục nào\n"
"\n"
"Trong thử nghiệm trước, chúng ta đã biết giá trị ban đầu để có thể thực hiện một giá trị chính xác, nhưng bây giờ chúng ta có một thanh trạng thái mà không biết giá trị bắt đầu.\n"
"Chúng ta chỉ biết nó nằm giữa 0 và 500. Và bạn nhấp 'Đánh tôi' bạn mất vài sức khỏe. Hiệu ứng mất sức khỏe hiển thị trên thanh trạng thái.\n"
"\n"
"Có một số cách khác để tìm giá trị. (như giảm giá trị bằng cách ... quét), nhưng tôi sẽ chỉ giải thích cách dễ nhất. \"Giá trị ban đầu không xác định\" và giá trị đã giảm.\n"
"Vì bạn không biết giá trị đúng bây giờ, nên bạn chọn tìm 'Giá trị không xác định', loại giá trị 4-byte. (nhiều game dùng 4-byte)nhấp quét đầu và đợi đến khi xong.\n"
"\n"
"Khi nó xong bấm 'Đánh tôi'. Bạn sẽ mất vài sức khỏe. (lượng sức khỏe bạn mất hiển thị trong vài giây và sau đó biến mất, nhưng bạn không cần nó)\n"
"Giờ tới Cheat Engine, và chọn 'Giá trị đã giảm' và nhấn 'Quét tiếp'\n"
"Sau khi quét xong, bấm 'đánh tôi' lần nữa, và lặp lại cho đến khi tìm ra. \n"
"\n"
"Chúng ta biết giá trị nằm trong khoảng từ 0 đến 500, vậy hãy chọn địa chỉ có nhiều khả năng là địa chỉ chúng ta cần và thêm địa chỉ đó vào danh sách.\n"
"Giờ thay sức khỏe thành 5000, để tiến đến bước tiếp theo.\n"

#: unit5.rsconfirmclose5
msgid "Come on. This step is simple. For health do a float scan, and for ammo a double type. (don't forget to disable fastscan for double in this case) Just ignore the fact that it looks different because it has a \".\" in the value. You sure you want to quit?"
msgstr "Thôi nào. Đây là bước đơn giản. Sức khỏe thì quét kiểu float, và đạn thì kiểu double. (đừng quên vô hiệu quét nhanh cho kiểu double trong trường hợp này) Chỉ cần bỏ qua thực tế rằng nó trông khác vì nó có \".\" trong giá trị. Bạn có chắc muốn thoát?"

#: unit5.rsdead
msgid "I think you're dead!%sPress ok to become a brain eating zombie"
msgstr "Tôi nghĩ bạn đã chết!%sNhấn ok để thành thây ma ăn não"

#: unit5.rsloser
msgctxt "unit5.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit5.rsoutofammo
msgid "Out of ammo!%sPress ok to stock up on some ammo"
msgstr "Hết đạn!%sNhấn ok để thêm đạn"

#: unit5.rsstep4floatingpointspw
msgid "Step 4: Floating points (PW="
msgstr "Bước 4: Kiểu Float (PW="

#: unit5.rstutorialstep4
msgid ""
"In the previous tutorial we used bytes to scan, but some games store information in so called 'floating point' notations. \n"
"(probably to prevent simple memory scanners from finding it the easy way)\n"
"a floating point is a value with some digits behind the point. (like 5.12 or 11321.1)\n"
"\n"
"Below you see your health and ammo. Both are stored as Floating point notations, but health is stored as a float and ammo is stored as a double.\n"
"Click on hit me to lose some health, and on shoot to decrease your ammo with 0.5\n"
" \n"
"You have to set BOTH values to 5000 or higher to proceed.\n"
"\n"
"Exact value scan will work fine here, but you may want to experiment with other types too.\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Hint: It is recommended to disable \"Fast Scan\" for type double\n"
msgstr ""
"Trong hướng dẫn trước, chúng ta đã sử dụng byte để quét, nhưng một số trò chơi lưu trữ thông tin dưới dạng dấu phẩy động 'float'. \n"
"(có thể là để ngăn máy quét bộ nhớ đơn giản tìm thấy nó một cách dễ dàng)\n"
"dấu phẩy động là một giá trị có một số chữ số phía sau dấu chấm. (như 5.12 hoặc 11321.1)\n"
"\n"
"Dưới đây bạn thấy sức khỏe và đạn của bạn. Cả hai đều được lưu trữ dưới dạng ký hiệu Dấu phẩy động, nhưng sức khỏe được lưu trữ dưới dạng float và đạn được lưu trữ dưới dạng double.\n"
"Nhấp Đánh tôi và mất vài sức khỏe, và bắn để giảm đạn của bạn với 0.5\n"
" \n"
"Bạn cần đặt cả 2 thành 5000 hoặc cao hơn để hoàn tất.\n"
"\n"
"Giá trị chính xác sẽ hoạt động, nhưng bạn cũng có thể muốn thử nghiệm với các loại khác.\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Gợi ý: Nếu nó đề nghị nên vô hiệu \"Quét nhanh\" cho loại double\n"

#: unit6.rsloser
msgctxt "unit6.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit6.rsstep5codefinderpw
msgid "Step 5: Code finder (PW=%s)"
msgstr "Bước 5: Công cụ tìm mã (PW=%s)"

#: unit6.rstryagain6
msgid "This may look difficult. but it's basicly. Find health, rigthclick health, find what writes, change health, click replace, change health, done.  But don't feel down if you don't get it. at least you know the basicas of memory scanning...  Are you sure you want to quit?"
msgstr "Điều này có vẻ khó. nhưng nó cơ bản. Tìm sức khỏe, tìm nội dung được viết, thay đổi sức khỏe, nhấp chuột thay thế, thay đổi sức khỏe, đã xong. Nhưng đừng thất vọng nếu bạn không đạt được nó. ít nhất bạn biết cơ bản về quét bộ nhớ... Bạn có chắc muốn thoát không?"

#: unit6.rstutorialstep5
msgid ""
"Sometimes the location something is stored at changes when you restart the game, or even while you're playing.. In that case you can use 2 things to still make a table that works.\n"
"In this step I'll try to describe how to use the Code Finder function.\n"
"\n"
"The value down here will be at a different location each time you start the tutorial, so a normal entry in the address list wouldn't work.\n"
"First try to find the address. (you've got to this point so I assume you know how to)\n"
"When you've found the address, right-click the address in Cheat Engine and choose \"Find out what writes to this address\". A window will pop up with an empty list.\n"
"Then click on the Change value button in this tutorial, and go back to Cheat Engine. If everything went right there should be an address with assembler code there now.\n"
"Click it and choose the replace option to replace it with code that does nothing. That will also add the code address to the code list in the advanced options window. (Which gets saved if you save your table)\n"
"\n"
"Click on stop, so the game will start running normal again, and close to close the window.\n"
"Now, click on Change value, and if everything went right the Next button should become enabled.\n"
"\n"
"Note: When you're freezing the address with a high enough speed it may happen that next becomes visible anyhow\n"
msgstr ""
"Đôi khi, vị trí lưu trữ thứ gì đó thay đổi khi bạn khởi động lại trò chơi hoặc ngay cả khi bạn đang chơi .. Trong trường hợp đó, bạn có thể sử dụng 2 thứ để tạo một bảng hoạt động.\n"
"Trong bước này, tôi sẽ cố gắng mô tả cách sử dụng chức năng Code Finder.\n"
"\n"
"Giá trị ở đây sẽ ở một vị trí khác nhau mỗi khi bạn bắt đầu hướng dẫn, vì vậy một mục nhập bình thường trong danh sách địa chỉ sẽ không hoạt động.\n"
"Trước tiên hãy thử tìm địa chỉ. (bạn đã đến điểm này nên tôi cho rằng bạn biết cách)\n"
"Khi bạn tìm thấy địa chỉ, nhấp phải vào địa chỉ trong Cheat Engine và chọn \"Tìm những gì được ghi vào địa chỉ này\". 1 cửa sổ nhảy ra với danh sách trống.\n"
"Sau đó nhấp vào Thay đổi giá trị trong hướng dẫn, và trở lại Cheat Engine. Nếu mọi thứ suôn sẻ thì bây giờ sẽ có một địa chỉ với mã trình hợp dịch.\n"
"Nhấp vào nó và chọn tùy chọn thay thế nó bằng mã Nop. Điều đó cũng sẽ thêm địa chỉ mã vào danh sách mã trong cửa sổ tùy chọn nâng cao. (Sẽ được lưu nếu bạn lưu bảng của mình)\n"
"\n"
"Nhấp vào dừng, để trò chơi sẽ bắt đầu chạy bình thường trở lại và đóng để đóng cửa sổ.\n"
"Bây giờ, hãy nhấp vào Thay đổi giá trị và nếu mọi thứ diễn ra thuận lợi, nút Tiếp sẽ được bật.\n"
"\n"
"Ghi chú: Khi bạn đóng băng địa chỉ với tốc độ đủ cao, có thể xảy ra trường hợp tiếp theo hiển thị\n"

#: unit6.rswelldoneyouscrewedupthetutorial
msgctxt "unit6.rswelldoneyouscrewedupthetutorial"
msgid "Well done, you screwed up the tutorial!!!!"
msgstr "Làm tốt lắm, bạn đã hoàn thành hướng dẫn!!!!"

#: unit7.rsdontfuckingfreezethepointer
msgid "I'm sorry, but freezing the pointer is not really a functional solution"
msgstr "Tôi xin lỗi, nhưng đóng băng con trỏ không thực sự là một giải pháp chức năng"

#: unit7.rsloser
msgctxt "unit7.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit7.rsstep6pointerspw
msgid "Step 6: Pointers: (PW=%s)"
msgstr "Bước 6: Con trỏ (pointer): (PW=%s)"

#: unit7.rstryagain7
msgid "So, pointers are too difficult eh? Don't worry, try again later. For most beginners this is difficult to grasp. But I have to tell you it's a powerful feature if you learn to use it. Are you sure you want to quit?"
msgstr "Con trỏ quá khó phải không? Đừng lo, hãy thử lại sau. Đối với hầu hết người mới, điều này rất khó nắm bắt. Nhưng tôi phải nói với bạn rằng đó là một tính năng mạnh mẽ nếu bạn học cách sử dụng nó. Bạn có chắc bạn muốn thoát khỏi?"

#: unit7.rstutorialstep6
msgid ""
"In the previous step I explained how to use the Code finder to handle changing locations. But that method alone makes it difficult to find the address to set the values you want.\n"
"That's why there are pointers:\n"
"\n"
"At the bottom you'll find 2 buttons. One will change the value, and the other changes the value AND the location of the value.\n"
"For this step you don't really need to know assembler, but it helps a lot if you do.\n"
"\n"
"First find the address of the value. When you've found it use the function to find out what accesses this address.\n"
"Change the value again, and a item will show in the list. Double click that item. (or select and click on more info) and a new window will open with detailed information on what happened when the instruction ran.\n"
"If the assembler instruction doesn't have anything between a '[' and ']' then use another item in the list.\n"
"If it does it will say what it think will be the value of the pointer you need.\n"
"Go back to the main cheat engine window (you can keep this extra info window open if you want, but if you close it, remember what is between the [ and ] ) and do a 4 byte scan in hexadecimal for the value the extra info told you.\n"
"When done scanning it may return 1 or a few hundred addresses. Most of the time the address you need will be the smallest one. Now click on manually add and select the pointer checkbox.\n"
"\n"
"The window will change and allow you to type in the address of a pointer and a offset.\n"
"Fill in as address the address you just found.\n"
"If the assembler instruction has a calculation (e.g: [esi+12]) at the end then type the value in that's at the end. else leave it 0. If it was a more complicated instruction look at the calculation.\n"
"\n"
"example of a more complicated instruction:\n"
"[EAX*2+EDX+00000310] eax=4C and edx=00801234.\n"
"In this case EDX would be the value the pointer has, and EAX*2+00000310 the offset, so the offset you'd fill in would be 2*4C+00000310=3A8.  (this is all in hex, use calc.exe from windows in scientific mode to calculate)\n"
"\n"
"Back to the tutorial, click OK and the address will be added, If all went right the address will show P->xxxxxxx, with xxxxxxx being the address of the value you found. If thats not right, you've done something wrong.\n"
"Now, change the value using the pointer you added in 5000 and freeze it. Then click Change pointer, and if all went \n"
"right the next button will become visible.\n"
"\n"
"\n"
"extra:\n"
"And you could also use the pointer scanner to find the pointer to this address\n"
msgstr ""
"Trong bước trước, tôi đã giải thích cách sử dụng Công cụ tìm mã để xử lý các vị trí thay đổi. Nhưng riêng phương pháp đó thì rất khó tìm được địa chỉ để thiết lập các giá trị mà bạn muốn.\n"
"Đó là tại sao chúng ta có pointer 'con trỏ':\n"
"\n"
"Ở dưới cùng, bạn sẽ tìm thấy 2 nút. Một sẽ thay đổi giá trị và một thay đổi giá trị VÀ vị trí của giá trị.\n"
"Đối với bước này, bạn không thực sự cần biết trình lắp ráp, nhưng nó sẽ giúp ích rất nhiều nếu bạn làm.\n"
"\n"
"Đầu tiên hãy tìm địa chỉ của giá trị. Khi bạn tìm thấy nó, hãy sử dụng chức năng để tìm ra những gì truy cập vào địa chỉ này.\n"
"Thay đổi giá trị một lần nữa và một mục sẽ hiển thị trong danh sách. Nhấp đúp vào mục đó. (hoặc chọn và nhấp vào thông tin khác) và một cửa sổ mới sẽ mở ra với thông tin chi tiết về những gì đã xảy ra khi hướng dẫn chạy.\n"
"Nếu lệnh của trình hợp dịch không có bất kỳ thứ gì nằm giữa '[' and ']' thì hãy sử dụng một mục khác trong danh sách.\n"
"Nếu nó xảy ra, nó sẽ cho biết những gì nó nghĩ sẽ là giá trị của con trỏ bạn cần.\n"
"Quay lại cửa sổ cheat engine chính (bạn có thể giữ cửa sổ thông tin bổ sung này mở nếu bạn muốn, nhưng nếu bạn đóng nó, hãy nhớ những gì nằm giữa [và]) và thực hiện quét 4 byte trong Hex để tìm giá trị của thông tin bổ sung đã nói với bạn.\n"
"Khi quét xong, nó có thể trả về 1 hoặc vài trăm địa chỉ. Hầu hết thời gian địa chỉ bạn cần sẽ là địa chỉ nhỏ nhất. Bây giờ hãy nhấp vào thêm thủ công và chọn hộp kiểm con trỏ.\n"
"\n"
"Cửa sổ sẽ thay đổi và cho phép bạn nhập địa chỉ của một con trỏ và một bù (offset).\n"
"Điền vào như địa chỉ địa chỉ bạn vừa tìm thấy.\n"
"Nếu lệnh trình hợp dịch có một phép tính (ví dụ: [esi + 12]) ở cuối thì hãy nhập giá trị vào đó ở cuối. khác để lại nó 0. Nếu đó là một hướng dẫn phức tạp hơn, hãy xem phép tính.\n"
"\n"
"ví dụ về một hướng dẫn phức tạp hơn:\n"
"[EAX*2+EDX+00000310] eax=4C and edx=00801234.\n"
"Trong trường hợp này EDX sẽ là giá trị mà con trỏ có, và EAX*2+00000310 là bù, vậy bù bạn sẽ điền vào là 2*4C+00000310=3A8.  (tất cả đều ở dạng hex, sử dụng calc.exe từ windows ở chế độ khoa học để tính toán)\n"
"\n"
"Quay lại hướng dẫn, nhấp vào OK và địa chỉ sẽ được thêm vào, Nếu tất cả ổn, địa chỉ sẽ hiển thị P->xxxxxxx, với xxxxxxx là địa chỉ của giá trị bạn tìm thấy. Nếu điều đó không đúng, bạn đã làm sai.\n"
"Bây giờ, thay đổi giá trị bằng cách sử dụng con trỏ bạn đã thêm vào 5000 và đóng băng nó. Sau đó nhấp vào Thay pointer và nếu tất cả đều ổn \n"
"nút Tiếp sẽ hiển thị.\n"
"\n"
"\n"
"thêm:\n"
"Và bạn cũng có thể sử dụng máy quét con trỏ để tìm con trỏ đến địa chỉ này\n"

#: unit7.rswelldoneyouscrewedupthetutorial
msgctxt "unit7.rswelldoneyouscrewedupthetutorial"
msgid "Well done, you screwed up the tutorial!!!!"
msgstr "Tốt lắm, bạn đã hoàn thành hướng dẫn!!!!"

#: unit7.rsyouvegotsecondslefttochangethevalueto5000
msgid "You have %s second%s left to change the value to 5000"
msgstr "Bạn có %s giây%s còn lại để thay đổi giá trị thành 5000"

#: unit8.rsawyouredeathletmereviveyou
msgctxt "unit8.rsawyouredeathletmereviveyou"
msgid "Aw, you're dead! Let me revive you"
msgstr "Ố, bạn đã chết! Để tôi cứu bạn"

#: unit8.rshealth
msgid "Health"
msgstr "Sức khỏe"

#: unit8.rsloser
msgctxt "unit8.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit8.rsstep7codeinjectionpw
msgid "Step 7: Code Injection: (PW=%s)"
msgstr "Bước 7: Mã tiêm (Code Injection): (PW=%s)"

#: unit8.rstryagain8
msgid "Code injections too tough? No problem, memory scanning and basic pointers should be enough to get you experienced enough and you can always try the tutorial later. Are you sure you want to quit?"
msgstr "Mã tiêm quá khó nhai? Không sao, quét bộ nhớ và các con trỏ cơ bản phải đủ để giúp bạn có đủ kinh nghiệm và bạn luôn có thể thử hướng dẫn sau. Bạn có chắc muốn thoát?"

#: unit8.rstutorialstep7
msgid ""
"Code injection is a technique where you inject a piece of code into the target process, and then reroute the execution of code to go through your own written code.\n"
"\n"
"In this tutorial you'll have a health value and a button that will decrease your health by 1 each time you click it.\n"
"Your task is to use code injection to make the button increase your health by 2 each time it is clicked\n"
"\n"
"Start with finding the address and then find what writes to it.\n"
"then when you've found the code that decreases it browse to that address in the disassembler, and open the auto assembler window (ctrl+a)\n"
"There click on template and then code injection, and give it the address that decreases health (If it isn't already filled in correctly)\n"
"That will generate a basic auto assembler injection framework you can use for your code.\n"
"\n"
"Notice the alloc, that will allocate a block of memory for your code cave, in the past, in the pre windows 2000 systems, people had to find code caves in the memory(regions of memory unused by the game), but that's luckily a thing of the past since windows 2000, and will these days cause errors when trying to be used, due to SP2 of XP and the NX bit of new CPU's\n"
"\n"
"Also notice the line newmem: and originalcode: and the text \"Place your code here\"\n"
"As you guessed it, write your code here that will increase the  health with 2.\n"
"An usefull assembler instruction in this case is the \"ADD instruction\"\n"
"here are a few examples:\n"
"\"ADD [00901234],9\" to increase the address at 00901234 with 9\n"
"\"ADD [ESP+4],9\" to increase the address pointed to by ESP+4 with 9\n"
"In this case, you'll have to use the same thing between the brackets as the original code has that decreases your health\n"
"\n"
"Notice:\n"
"It is recommended to delete the line that decreases your health from the original code section, else you'll have to increase your health with 3 (you increase with 3, the original code decreases with 1, so the end result is increase with 2), which might become confusing. But it's all up to you and your programming.\n"
"\n"
"Notice 2:\n"
"In some games the original code can exist out of multiple instructions, and sometimes, not always, it might happen that a code at another place jumps into your jump instruction end will then cause unknown behavior. If that happens, you should usually look near that instruction and see the jumps and fix it, or perhaps even choose to use a different address to do the code injection from. As long as you're able to figure out the address to change from inside your injected code.\n"
msgstr ""
"Chèn mã là một kỹ thuật trong đó bạn đưa một đoạn mã vào quy trình đích, sau đó định tuyến lại việc thực thi mã để đi qua mã được viết của riêng bạn.\n"
"\n"
"Trong hướng dẫn này, bạn sẽ có một giá trị sức khỏe và một nút sẽ giảm sức khỏe của bạn đi 1 mỗi khi bạn nhấp vào nó.\n"
"Nhiệm vụ của bạn là sử dụng mã tiêm để làm cho nút tăng 2 sức khỏe mỗi khi nhấp vào\n"
"\n"
"Bắt đầu với việc tìm địa chỉ và sau đó tìm những gì ghi vào nó.\n"
"sau đó khi bạn tìm thấy mã giảm, nó sẽ duyệt đến địa chỉ đó trong trình tháo gỡ và mở cửa sổ trình biên dịch tự động (ctrl + a)\n"
"Ở đó, nhấp vào mẫu và sau đó nhập mã, và cung cấp cho nó địa chỉ làm giảm sức khỏe (Nếu nó chưa được điền chính xác)\n"
"Điều đó sẽ tạo ra một khuôn mẫu chèn mã lắp ráp tự động cơ bản mà bạn có thể sử dụng cho mã của mình.\n"
"\n"
"Lưu ý về phân bổ, sẽ phân bổ một khối bộ nhớ cho hang mã của bạn, trước đây, trong các hệ thống trước windows 2000, người ta phải tìm các hang mã trong bộ nhớ (vùng bộ nhớ mà trò chơi không sử dụng), nhưng đó là điều may mắn quá khứ kể từ windows 2000 và những ngày này sẽ gây ra lỗi khi cố gắng sử dụng, do SP2 của XP và bit NX của CPU mới\n"
"\n"
"Cũng để ý dòng newmem: and originalcode: và dòng chữ \"Đặt mã của bạn ở đây\"\n"
"Như bạn đã đoán, hãy viết mã của bạn ở đây để tăng sức khỏe với 2.\n"
"Một lệnh hợp ngữ hữu ích trong trường hợp này là \"lệnh ADD\"\n"
"Đây là vài ví dụ:\n"
"\"ADD [00901234],9\" để tăng địa chỉ tại 00901234 với 9\n"
"\"ADD [ESP+4],9\" để tăng địa chỉ được trỏ đến ESP+4 với 9\n"
"Trong trường hợp này, bạn sẽ phải sử dụng cùng một thứ giữa các dấu ngoặc như mã gốc đã làm giảm sức khỏe của bạn\n"
"\n"
"Lưu ý:\n"
"Bạn nên xóa dòng giảm sức khỏe của bạn khỏi phần mã gốc, nếu không bạn sẽ phải tăng sức khỏe với 3 (bạn tăng với 3, mã gốc giảm với 1, vì vậy kết quả cuối cùng là tăng với 2) , điều này có thể trở nên khó hiểu. Nhưng tất cả đều phụ thuộc vào bạn và chương trình của bạn.\n"
"\n"
"Lưu ý 2:\n"
"Trong một số trò chơi, mã gốc có thể tồn tại ngoài nhiều lệnh và đôi khi, không phải lúc nào cũng vậy, có thể xảy ra trường hợp mã ở nơi khác nhảy vào phần cuối lệnh nhảy của bạn sau đó sẽ gây ra hành vi không xác định. Nếu điều đó xảy ra, bạn thường nên nhìn gần hướng dẫn đó và xem các bước nhảy và sửa nó, hoặc thậm chí có thể chọn sử dụng một địa chỉ khác để thực hiện việc chèn mã. Miễn là bạn có thể tìm ra địa chỉ để thay đổi từ bên trong mã được nhập của mình.\n"

#: unit9.rsloser
msgctxt "unit9.rsloser"
msgid "BOO"
msgstr "NÀNÍ"

#: unit9.rsstep8multilevelpointerspw
msgid "Step 8: Multilevel pointers: (PW=%s)"
msgstr "Bước 8: Con trỏ đa cấp (Multilevel pointers): (PW=%s)"

#: unit9.rstryagain9
msgid "Aw, you've almost reached the end. But don't worry, multilevel pointers can be a real pain when dealing with. If you get more experienced someday you can try it again. Are you sure you want to quit?"
msgstr "Ồ, bạn gần như đã đến cuối. Nhưng đừng lo lắng, con trỏ đa cấp có thể là một nỗi đau thực sự khi xử lý. Nếu một ngày nào đó bạn có nhiều kinh nghiệm hơn, bạn có thể thử lại. Bạn có chắc bạn muốn thoát khỏi?"

#: unit9.rstutorialstep8
msgid ""
"This step will explain how to use multi-level pointers.\n"
"In step 6 you had a simple level-1 pointer, with the first address found already being the real base address.\n"
"This step however is a level-4 pointer. It has a pointer to a pointer to a pointer to a pointer to a pointer to the health.\n"
"\n"
"You basicly do the same as in step 6. Find out what accesses the value, look at the instruction and what probably is the base pointer value, and what is the offset, and already fill that in or write it down. But in this case the address you'll find will also be a pointer. You just have to find out the pointer to that pointer exactly the same way as you did with the value. Find out what accesses that address you found, look at the assembler instruction, note the probable instruction and offset, and use that.\n"
"and continue till you can't get any further (usually when the base address is a static address, shown up as green)\n"
"\n"
"Click Change Value to let the tutorial access the health.\n"
"If you think you've found the pointer path click Change Register. The pointers and value will then change and you'll have 3 seconds to freeze the address to 5000\n"
"\n"
"Extra: This problem can also be solved using a auto assembler script, or using the pointer scanner\n"
"Extra2: In some situations it is recommended to change ce's codefinder settings to Access violations when \n"
"Encountering instructions like mov eax,[eax] since debugregisters show it AFTER it was changed, making it hard to find out the the value of the pointer\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Extra3: If you're still reading. You might notice that when looking at the assembler instructions that the pointer is being read and filled out in the same codeblock (same routine, if you know assembler, look up till the start of the routine). This doesn't always happen, but can be really useful in finding a pointer when debugging is troublesome\n"
msgstr ""
"Bước này sẽ giải thích cách sử dụng con trỏ nhiều cấp.\n"
"Trong bước 6, bạn đã có một con trỏ cấp 1 đơn giản, với địa chỉ đầu tiên được tìm thấy đã là địa chỉ cơ sở thực.\n"
"Tuy nhiên, bước này là một con trỏ cấp 4. Nó có một con trỏ tới một con trỏ tới một con trỏ tới một con trỏ tới một con trỏ tới sức khỏe.\n"
"\n"
"Về cơ bản, bạn thực hiện tương tự như trong bước 6. Tìm hiểu những gì truy cập vào giá trị, xem hướng dẫn và những gì có thể là giá trị con trỏ cơ sở, và độ lệch là gì, rồi điền hoặc viết nó ra. Nhưng trong trường hợp này, địa chỉ bạn sẽ tìm thấy cũng sẽ là một con trỏ. Bạn chỉ cần tìm ra con trỏ tới con trỏ đó giống như cách bạn đã làm với giá trị. Tìm hiểu những truy cập mà bạn tìm thấy địa chỉ, xem hướng dẫn trình hợp dịch, lưu ý hướng dẫn có thể xảy ra và bù đắp, và sử dụng.\n"
"và tiếp tục cho đến khi bạn không thể nhận được thêm nữa (thường khi địa chỉ cơ sở là địa chỉ tĩnh, hiển thị màu xanh lục)\n"
"\n"
"Nhấp vào Thay đổi giá trị để cho phép hướng dẫn truy cập sức khỏe.\n"
"Nếu bạn nghĩ rằng bạn đã tìm thấy đường dẫn con trỏ, hãy nhấp vào Thay Đăng ký. Sau đó, các con trỏ và giá trị sẽ thay đổi và bạn sẽ có 3 giây để cố định địa chỉ thành 5000\n"
"\n"
"Thêm: Vấn đề này cũng có thể được giải quyết bằng cách sử dụng tập lệnh trình hợp dịch tự động hoặc sử dụng máy quét con trỏ\n"
"Thêm2: Trong một số trường hợp, bạn nên thay đổi cài đặt công cụ tìm mã thành Truy cập vi phạm khi\n"
"Gặp phải các hướng dẫn như mov eax, [eax] vì người đăng ký gỡ lỗi hiển thị nó SAU KHI nó được thay đổi, nên khó tìm ra giá trị của con trỏ\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"Thêm3: Nếu bạn vẫn đang đọc. Bạn có thể nhận thấy rằng khi xem các hướng dẫn trình hợp dịch mà con trỏ đang được đọc và điền vào cùng một khối mã (cùng một quy trình, nếu bạn biết trình hợp dịch, hãy tra cứu cho đến khi bắt đầu quy trình). Điều này không phải lúc nào cũng xảy ra, nhưng có thể thực sự hữu ích trong việc tìm kiếm con trỏ khi việc gỡ lỗi gặp rắc rối\n"

#: unit9.rsunrandomizerdetected
msgid "Unrandomizer detected"
msgstr "Bỏ ngẫu nhiên được phát hiện"

#: unit9.rsyouvegotsecondslefttochangethevalueto5000
msgid "You've got %s seconds left to change the value to 5000"
msgstr "Bạn có %s giây còn lại để thay đổi giá trị thành 5000"

